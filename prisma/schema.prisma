// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                Int                 @id @default(autoincrement())
  area              Int
  notify_to         Int
  GS_Account        GS_Account?
  PESC_Account      PESC_Account?
  GS_Accruals       GS_Accruals[]
  GS_Meters_History GS_Meters_History[]
  PESC_Accruals     PESC_Accruals[]
}

model GS_Account {
  id         Int         @id @default(autoincrement())
  GS_Session GS_Session?
  account    Account     @relation(fields: [accountId], references: [id])
  accountId  Int         @unique
}

model GS_Session {
  token     String     @unique
  account   GS_Account @relation(fields: [accountId], references: [id])
  accountId Int        @unique
}

model PESC_Account {
  id           Int           @id @default(autoincrement())
  creds        String        @unique
  PESC_Session PESC_Session?
  account      Account       @relation(fields: [accountId], references: [id])
  accountId    Int           @unique
}

model PESC_Session {
  token     String       @unique
  expired   DateTime
  account   PESC_Account @relation(fields: [accountId], references: [id])
  accountId Int          @unique
}

model GS_Accruals {
  id           Int      @id @default(autoincrement())
  accrual_id   String   @unique
  status       String // debt | paid
  accrual_date DateTime
  receipt_path String?
  account      Account  @relation(fields: [account_id], references: [id])
  account_id   Int
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model GS_Meters_History {
  id         Int      @id @default(autoincrement())
  account    Account  @relation(fields: [account_id], references: [id])
  account_id Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model PESC_Accruals {
  id           Int      @id @default(autoincrement())
  accrual_id   Int      @unique
  status       String // debt | paid
  accrual_date DateTime
  receipt_path String?
  account      Account  @relation(fields: [account_id], references: [id])
  account_id   Int
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}
